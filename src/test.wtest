import wollok.game.*
import personaje.*
import extras.*
import enemigos.*
import randomizer.*
import posiciones.*
import paleta.*
import armas.*
import pelea.*
import mapa.*

/*
describe "prueba de movimiento de enemigo1" {

    test "distancia a la que está objetivoADestruir (personaje)" {
        assert.equals(5, enemigo1.distanciaEnEjeX())
        assert.equals(5, enemigo1.distanciaEnEjeY())
        personaje.mover(izquierda) //acá el enemigo se movería hacia arriba, porque le queda más lejos el eje y de nuestro personaje
        assert.equals(4, enemigo1.distanciaEnEjeX())
        assert.equals(4, enemigo1.distanciaEnEjeY())
    }

}
*/

describe "testeo de funcionalidades" {

    method initialize() {
        game.width(30)
        game.height(25)
    }

    test "lista de enemigos de la dungeon" {
        fabricaDeOjoVolador.agregarNuevoEnemigo(game.at(20,9), 150, 20)
	    fabricaDeEsqueleto.agregarNuevoEnemigo(game.at(3,10), 200, 43, 3) 
	    fabricaDeEsqueleto.agregarNuevoEnemigo(game.at(26,10), 200, 43, 3)
	    fabricaDeGoblin.agregarNuevoEnemigoCon(game.at(15, 14), 95, 37)
        assert.equals(4, dungeon.enemigos().size())
    }

    test "método de game getObjectsIn(pos) y método de mapa limpiar()" {
        fabricaDeOjoVolador.agregarNuevoEnemigo(game.at(23,15), 150, 20)
        fabricaDeGoblin.agregarNuevoEnemigoCon(game.at(15,14), 95, 37)
        fabricaDeEsqueleto.agregarNuevoEnemigo(game.at(3,10), 200, 43, 3) 
        fabricaDeEsqueleto.agregarNuevoEnemigo(game.at(26,10), 200, 43, 3) 
        assert.equals(1, game.getObjectsIn(game.at(26,10)).size())
        assert.equals(1, game.getObjectsIn(game.at(23,15)).size())
        mapa.limpiar()
        assert.equals(0, game.getObjectsIn(game.at(26,10)).size())
        assert.equals(0, game.getObjectsIn(game.at(23,15)).size())
    }

}